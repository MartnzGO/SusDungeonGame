[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[ext_resource path="res://Modells/Terrain_objects/Water_N_A2.png" type="Texture" id=1]
[ext_resource path="res://Modells/Terrain_objects/waterfall_tex.png" type="Texture" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;

render_mode blend_mix, specular_phong, cull_disabled;

uniform vec4 light_color : hint_color;
uniform vec4 dark_color : hint_color;

uniform sampler2D water_tex;
uniform sampler2D noise_tex;
uniform sampler2D normal_tex;

uniform float displ_amount = 0.02;
uniform float speed = 1.0;

uniform vec2 strength = vec2(0.25, 0.5);
uniform vec2 frequency = vec2(3.0, 2.5);
uniform vec2 time_factor = vec2(5.0,4.0);

float height(vec2 pos, float time){
	return (strength.y * sin(pos.y * frequency.y + time * time_factor.y)) + (strength.x * sin(pos.x * frequency.x + time * time_factor.x)); 
}

void vertex(){
	VERTEX.y += height(VERTEX.yz, TIME);
}

void fragment(){
	
	vec2 displ = texture(water_tex, UV - TIME * speed / 8f).xy;
	displ = (displ * 2f - 1f) * displ_amount;
	
	float noise = texture(noise_tex, vec2(UV.x, UV.y / 4f - TIME * speed / 4f) + displ).x;
	noise = floor(noise * 4f) / 4f;
	
	vec4 col = mix(dark_color, light_color, noise);
	
	vec2 uv_movement = UV;
	uv_movement -= vec2(0.0, 1.0) * TIME * speed;
	
	ALBEDO = col.rgb;
	NORMALMAP = texture(normal_tex, uv_movement).rgb;
	ROUGHNESS = 0.11;
	ALPHA = texture(water_tex, uv_movement).a * 0.75;
}"

[sub_resource type="OpenSimplexNoise" id=2]
period = 16.0
persistence = 0.399
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=3]
width = 256
height = 256
seamless = true
noise = SubResource( 2 )

[resource]
shader = SubResource( 1 )
shader_param/light_color = Color( 0.152941, 1, 1, 0.294118 )
shader_param/dark_color = Color( 0.0745098, 0, 0.960784, 1 )
shader_param/displ_amount = 0.02
shader_param/speed = 3.0
shader_param/strength = Vector2( 0.5, 0.5 )
shader_param/frequency = Vector2( 2, 1 )
shader_param/time_factor = Vector2( 5, 4 )
shader_param/water_tex = ExtResource( 2 )
shader_param/noise_tex = SubResource( 3 )
shader_param/normal_tex = ExtResource( 1 )
